# -*- python -*-
import os, os.path
Import('env libhammer_shared testruns targets')
Import('llvm_defines')
Import('llvm_includes')

pythonenv = env.Clone(IMPLICIT_COMMAND_DEPENDENCIES = 0)

swig = pythonenv.Command("hammer.i", "../swig/hammer.i", Copy("$TARGET", "$SOURCE"))
setup = ['setup.py']
pydir = os.path.join(env['BUILD_BASE'], 'src/bindings/python')
define_list = ','.join(llvm_defines)
inc_list = ' '.join(['-I' + e for e in llvm_includes])
swig_opt_list = '-DHAMMER_INTERNAL__NO_STDARG_H -I../../ ' + inc_list
libhammer_python = pythonenv.Command(['hammer.py', 'hammer_wrap.c'], [swig, setup], \
    'python ' + os.path.join(pydir, 'setup.py') + ' build_ext --inplace ' + inc_list + \
    ' --define=\"' + define_list + '\" --swig-opts=\"' + swig_opt_list + '\"')
Default(libhammer_python)

pytestenv = pythonenv.Clone()
pytestenv['ENV']['LD_LIBRARY_PATH'] = os.path.dirname(str(libhammer_shared[0]))
pytests = ['hammer_tests.py']
pytestexec = pytestenv.Command(['hammer.pyc', 'hammer_tests.pyc'], pytests + libhammer_python, "LD_LIBRARY_PATH=" + os.path.dirname(str(libhammer_shared[0])) + " nosetests -vv $SOURCE")
pytest = Alias("testpython", [pytestexec], pytestexec)
AlwaysBuild(pytestexec)
testruns.append(pytest)

pyinstallexec = pythonenv.Command(None, libhammer_python, 'python ' + os.path.join(pydir, 'setup.py ') + ' install')
pyinstall = Alias("installpython", [pyinstallexec], pyinstallexec)
targets.append(pyinstall)
